{"version":3,"file":"static/js/956.6aa256b2.chunk.js","mappings":"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","sources":["components/About.js","components/ImageWithSkeleton.js","components/ItemDiv.js"],"sourcesContent":["import React, {useRef, useEffect} from 'react';\nimport { Container, Stack, Box, Typography } from '@mui/material';\nimport { gsap } from \"gsap\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\n\nimport ItemDiv from \"./ItemDiv.js\";\nimport ImageWithSkeleton from './ImageWithSkeleton.js';\n\n\nconst flexStyle = {\n    padding: 2,\n    display: \"flex\",\n    flexFlow: \"row wrap\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    alignContent: \"spaceEvenly\",\n    maxWidth: {xs: 350, sm:350, md: 800}\n}\n\nconst aboutProfiles = [\n    {\n        imgSource: \"/images/profile_pic.png\",\n        imgAlt: \"Profile Picture\",\n        title: \"Thien Tran\",\n        subtitle: \"UI/UX Developer\",\n        body: \"Hello, I'm a UI/UX Developer from Adelaide, Australia. I have a diverse skillset that allows me to approach web design in a more holistic manner. I am passionate about learning and am always looking for projects that will give me the opportunity to engage with more web technologies. In my free time and I enjoy playing social Soccer or Basketball. I also enjoy playing and designing boardgames.\",\n    }\n]\n\ngsap.registerPlugin(ScrollTrigger);\n\nconst About = () => {\n    const profileRef = useRef(null);\n    \n    useEffect(() => {\n        \n        let ctx = gsap.context(() => {\n            \n            gsap.set(\".profile\", {opacity:0})\n            \n            gsap.to(\".profile\", \n            {   \n                scrollTrigger: {\n                    trigger: \".profile\",\n                    toggleActions: \"restart none none none\"\n                },\n                opacity: 1, \n                duration: 3,\n            })\n        \n        }, profileRef)\n        \n        return () => ctx.revert();\n\n    }, []);\n\n    return (\n        <Container component=\"section\" ref={profileRef} sx={{pt:38, pb:14}} maxWidth=\"xs\" fixed>\n            <Typography variant=\"h3\" component=\"h4\" align=\"center\" gutterBottom>About</Typography>\n            <Stack direction=\"column\" alignItems=\"center\" spacing={3} className=\"profile\">\n                <ItemDiv sx={{height:3, width:40, padding:0}} darkhex=\"#AE7EAA\" lighthex=\"#ff97cc\"/>\n                {aboutProfiles.map((item, i) => {\n                    return (\n                            <ItemDiv key={i} sx={flexStyle}>\n                                <ImageWithSkeleton source={item.imgSource} text={item.imgAlt} width={250} height={250}/>\n                                <Box sx={{flexBasis:\"60%\", flexGrow:\"2\", padding:2}}>\n                                    <Typography variant=\"h6\" component=\"h5\" gutterBottom>{item.title}</Typography>\n                                    <Typography variant=\"subtitle2\" gutterBottom>{item.subtitle}</Typography>\n                                    <Typography variant=\"body2\" gutterBottom>{item.body}</Typography>\n                                </Box>\n                            </ItemDiv>\n                    )\n                })}\n            </Stack>\n        </Container>\n    )\n}\n\nexport default About","import React from 'react';\nimport Skeleton from '@mui/material/Skeleton';\n\nconst ImageWithSkeleton = ({source, text, width, height}) => {\n    const [loaded, setLoaded] = React.useState(false);\n    return(\n        <>\n            {loaded ? null : (<Skeleton variant=\"rounded\" animation=\"wave\" width={width} height={height}/>)}\n            <img\n                style={loaded ? {width:\"60%\"} : { display:\"none\"}}\n                src={source}\n                alt={text}\n                onLoad={() => {setLoaded(true)}}\n            />      \n        </>\n    )\n}\n\nexport default ImageWithSkeleton","import { styled } from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\n\nconst ItemDiv = styled(Paper)(\n    ({ theme, darkhex=\"#1A2027\", lighthex=\"#FFF\" }) => (\n        {\n            backgroundColor: theme.palette.mode === \"dark\" ? darkhex : lighthex,\n            boxShadow: theme.palette.mode === \"light\" ? \"5px 5px 50px #DDD\" : \"none\",\n        }\n    )\n);\n\nexport default ItemDiv"],"names":["flexStyle","padding","display","flexFlow","justifyContent","alignItems","alignContent","maxWidth","xs","sm","md","aboutProfiles","imgSource","imgAlt","title","subtitle","body","gsap","registerPlugin","ScrollTrigger","About","profileRef","useRef","useEffect","ctx","context","set","opacity","to","scrollTrigger","trigger","toggleActions","duration","revert","_jsxs","Container","component","ref","sx","pt","pb","fixed","children","_jsx","Typography","variant","align","gutterBottom","Stack","direction","spacing","className","ItemDiv","height","width","darkhex","lighthex","map","item","i","ImageWithSkeleton","source","text","Box","flexBasis","flexGrow","_ref","loaded","setLoaded","React","_Fragment","Skeleton","animation","style","src","alt","onLoad","styled","Paper","theme","backgroundColor","palette","mode","boxShadow"],"sourceRoot":""}